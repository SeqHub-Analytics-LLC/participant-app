{"version":3,"sources":["reducers/dataReducer.js","reducers/index.js","actions/types.js","store.js","actions/dataActions.js","components/EnterID.js","components/HomePage.js","items/Slider.js","items/NormalCurve.jsx","components/Experiment.js","components/Success.js","App.js","serviceWorker.js","index.js"],"names":["initialState","dbInfo","exptToDisplay","participantID","questionKeys","numQ","Number","isFinalQ","answer","fileContent","combineReducers","expt","state","action","type","payload","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","getExpt","which_db","study_name","expt_name","dispatch","API_URL","axios","get","then","res","experiments","data","thisExpt","forEach","element","exptName","sendExpt","which_col","dataToPOST","post","setNumQ","num","is","storeAnswer","question","que","ans","getItemData","which_database","fileName","filter","doc","EnterID","props","ParticipantID","onChange","bind","showExpt","this","getData","username","match","params","studyExpt","storeDBInfo","studyName","split","e","setState","target","name","value","storePartID","allKeys","Object","keys","console","log","str","charAt","storeQKeys","length","history","push","className","onClick","Component","connect","which_collection","db","col","part_id","HomePage","Slider","resetState","onSubmit","showSlider","setWhichItem","childRef","undefined","min","lowRange","max","highRange","submitted","style","color","NormalCurve","sliderRef","React","createRef","rectRef","svgRef","areaRef","dotReturn","curveArea","triMouseDown","triDrag","triUp","questionNC","col11","col21","overlapVals","Math","abs","col22","xPos","yPos","xPosOrig","CX","distancing1","distancing","CY","ceilDist","stroke","fill","fillOpacity","strokeOpacity","cx","cy","r","circRad","distancing2","preventDefault","svgPre","current","ptPre","createSVGPoint","x","clientX","svgPPre","matrixTransform","getScreenCTM","inverse","prevState","triDown","mousePointerRange","triCent1","triCent2","svgPPree","screenX","y","screenY","svgX","pt","svg","svgP","round","len2","colLim2","col12","len1","colLim1","col2","innerHTML","onMouseMove","onMouseUp","width","svgWidth","height","svgHeight","ref","opacity","Array","map","colValHeiS","row","colValHeiS2","dotReturn2","points","onMouseDown","class","backgroundColor","graph1","graph2","unitHeight","ceil","isDown","rectX","down","Experiment","whichItem","onFinalSubmit","whichSubmit","alert","nextQ","qKey","toString","childSlider","nextQuestion","childNormalCurve","key","dataFileName","dataFileContent","participant","displayExpt","Success","finalObj","entry","App","basename","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.2af6869a.chunk.js","sourcesContent":["import {\r\n  DB_INFO,\r\n  GET_EXPT,\r\n  PART_ID,\r\n  Q_KEYS,\r\n  NUM_Q,\r\n  FINAL_Q,\r\n  ANSWER,\r\n  ITEM_DATA\r\n} from \"../actions/types\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport { bindActionCreators } from \"redux\";\r\n\r\nconst initialState = {\r\n  dbInfo: {},\r\n  exptToDisplay: {},\r\n  participantID: '',\r\n  questionKeys: [],\r\n  numQ: Number,\r\n  isFinalQ: false,\r\n  answer: [],\r\n  fileContent: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case DB_INFO:\r\n      return {\r\n        ...state,\r\n        dbInfo: action.payload\r\n      };\r\n    case GET_EXPT:\r\n      return {\r\n        ...state,\r\n        exptToDisplay: action.payload\r\n      };\r\n    case PART_ID:\r\n      return {\r\n        ...state,\r\n        participantID: action.payload\r\n      };\r\n    case Q_KEYS:\r\n      return {\r\n        ...state,\r\n        questionKeys: action.payload\r\n      };\r\n    case NUM_Q:\r\n      return {\r\n        ...state,\r\n        numQ: action.payload\r\n      }\r\n    case FINAL_Q:\r\n      return {\r\n        ...state,\r\n        isFinalQ: action.payload\r\n      };\r\n    case ANSWER:\r\n      return {\r\n        ...state,\r\n        answer: [...state.answer, action.payload]\r\n      };\r\n    case ITEM_DATA:\r\n      return {\r\n        ...state,\r\n        fileContent: action.payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport dataReducer from \"./dataReducer\";\r\n\r\nexport default combineReducers({\r\n  expt: dataReducer\r\n});","export const DB_INFO = \"DB_INFO\";\r\nexport const GET_EXPT = \"GET_EXPT\";\r\nexport const PART_ID = \"PART_ID\";\r\nexport const SEND_EXPT = \"SEND_EXPT\";\r\nexport const Q_KEYS = \"Q_KEYS\";\r\nexport const NUM_Q = \"NUM_Q\";\r\nexport const FINAL_Q = \"FINAL_Q\";\r\nexport const ANSWER = \"ANSWER\";\r\nexport const ITEM_DATA = \"ITEM_DATA\";","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware)\r\n    // ,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n  )\r\n);\r\n\r\nexport default store;","import axios from \"axios\";\r\nimport {\r\n  DB_INFO,\r\n  GET_EXPT,\r\n  PART_ID,\r\n  SEND_EXPT,\r\n  Q_KEYS,\r\n  NUM_Q,\r\n  FINAL_Q,\r\n  ANSWER,\r\n  ITEM_DATA\r\n} from \"./types\"\r\n\r\nexport const storeDBInfo = (which_database, which_collection) => dispatch => {\r\n  dispatch({\r\n    type: DB_INFO,\r\n    payload: {\r\n      db: which_database,\r\n      col: which_collection\r\n    }\r\n  })\r\n}\r\n\r\nexport const getExpt = (which_db, study_name, expt_name) => dispatch => {\r\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\r\n    which_db + '/info/' + 'studyName-' + study_name;\r\n  axios\r\n    .get(API_URL)\r\n    .then(res => {\r\n      const experiments = res.data.experiments;\r\n      var thisExpt = {};\r\n      experiments.forEach(element => {\r\n        if (element.exptName == expt_name) {\r\n          thisExpt = element;\r\n        }\r\n      });\r\n      dispatch({\r\n        type: GET_EXPT,\r\n        payload: thisExpt\r\n      })\r\n    })\r\n}\r\n\r\nexport const storePartID = (part_id) => dispatch => {\r\n  dispatch({\r\n    type: PART_ID,\r\n    payload: part_id\r\n  })\r\n}\r\n\r\nexport const sendExpt = (which_db, which_col, dataToPOST) => dispatch => {\r\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\r\n    which_db + \"/\" + which_col;\r\n  axios\r\n    .post(API_URL, dataToPOST)\r\n    .then(res => {\r\n      // console.log(res);\r\n    })\r\n}\r\n\r\nexport const storeQKeys = (keys) => dispatch => {\r\n  dispatch({\r\n    type: Q_KEYS,\r\n    payload: keys\r\n  })\r\n}\r\n\r\nexport const setNumQ = (num) => dispatch => {\r\n  dispatch({\r\n    type: NUM_Q,\r\n    payload: num\r\n  })\r\n}\r\n\r\nexport const isFinalQ = (is) => dispatch => {\r\n  dispatch({\r\n    type: FINAL_Q,\r\n    payload: is\r\n  })\r\n}\r\n\r\n// entry should be in the format of: { \"somequestion\": \"answer\" }\r\nexport const storeAnswer = (question, answer) => dispatch => {\r\n  dispatch({\r\n    type: ANSWER,\r\n    payload: {\r\n      que: question,\r\n      ans: answer\r\n    }\r\n  })\r\n}\r\n\r\nexport const getItemData = (which_database, fileName) => dispatch => {\r\n  const API_URL = 'https://test-api-615.herokuapp.com/api/feedback/' +\r\n    which_database + \"/itemData\";\r\n  axios\r\n    .get(API_URL)\r\n    .then(res => {\r\n      const fileContent = res.data.filter(doc => doc.fileName == fileName)[0].fileContent\r\n      dispatch({\r\n        type: ITEM_DATA,\r\n        payload: fileContent\r\n      })\r\n    })\r\n}","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { \r\n  storeDBInfo,\r\n  storePartID, \r\n  getExpt,\r\n  storeQKeys,\r\n  setNumQ,\r\n  isFinalQ\r\n} \r\nfrom \"../actions/dataActions\";\r\n\r\nclass EnterID extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ParticipantID: ''\r\n    }\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n    this.showExpt = this.showExpt.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n\r\n    const username = this.props.match.params.username;\r\n    const studyExpt = this.props.match.params.expt;\r\n    this.props.storeDBInfo(username, studyExpt);\r\n  }\r\n\r\n  getData() {\r\n    const username = this.props.match.params.username;\r\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\r\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\r\n    this.props.getExpt(username, studyName, exptName);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showExpt() {\r\n    this.props.storePartID(this.state.ParticipantID);\r\n    const username = this.props.match.params.username;\r\n    const studyExpt = this.props.match.params.expt;\r\n    var questionKeys = [];\r\n    if (this.props.expt.exptToDisplay) {\r\n      const allKeys = Object.keys(this.props.expt.exptToDisplay);\r\n      console.log(allKeys);\r\n      // in the JSON file each question must have index q0, q1, q2, ... \r\n      questionKeys = allKeys.filter(str => str.charAt(0) == \"q\");\r\n      this.props.storeQKeys(questionKeys);\r\n    }\r\n    // console.log(questionKeys);\r\n    if (questionKeys.length == 1) {\r\n      this.props.isFinalQ(true);\r\n    }\r\n    this.props.setNumQ(0);\r\n    this.props.history.push(\"/expt/\" + username + \"/\" + studyExpt + \r\n      \"/\" + questionKeys[0]);\r\n  }\r\n\r\n  render() {\r\n    const exptName = this.props.match.params.expt;\r\n      return (\r\n        <div className=\"container\">\r\n        Experiment name: <br/>\r\n        <b>{exptName}</b>\r\n        <br/><br/>\r\n        Enter your unique ID: <p></p>\r\n        <input type=\"text\" name=\"ParticipantID\" \r\n          value={this.state.ParticipantID} onChange={this.onChange}/>\r\n        <br/>\r\n        <input type=\"button\" className=\"btn\" value=\"Start Experiment\" \r\n          onClick={this.showExpt}/>\r\n        <br/><br/>\r\n        Note: once you click \"Ok\" for one question, you won't be\r\n        able to change your response. \r\n      </div>\r\n      )\r\n  }\r\n}\r\n\r\nEnterID.propTypes = {\r\n  storeDBInfo: PropTypes.func.isRequired,\r\n  getExpt: PropTypes.func.isRequired,\r\n  expt: PropTypes.object.isRequired,\r\n  storePartID: PropTypes.func.isRequired,\r\n  participantID: PropTypes.string.isRequired,\r\n  storeQKeys: PropTypes.func.isRequired,\r\n  setNumQ: PropTypes.func.isRequired,\r\n  isFinalQ: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  expt: state.expt,\r\n  participantID: state.participantID\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { storeDBInfo, storePartID, getExpt, storeQKeys, setNumQ, isFinalQ }\r\n)(EnterID);\r\n","import React, { Component } from 'react';\r\n\r\nclass HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>This is the home page</h1>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getExpt,\r\n  storeAnswer\r\n} from \"../actions/dataActions\";\r\n\r\n// This component should do the following:\r\n// - Display question\r\n// - Display an experiment item (in this case, a slider)\r\n// - Store answer into Redux store upon submission \r\nclass Slider extends Component {\r\n  constructor() {\r\n    // putting super() here so that we can use this.blahblah\r\n    super();\r\n    this.state = this.initialState;\r\n\r\n    this.resetState = this.resetState.bind(this);\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.showSlider = this.showSlider.bind(this);\r\n\r\n    this.setWhichItem = this.setWhichItem.bind(this);\r\n  }\r\n\r\n  get initialState() {\r\n    return {\r\n      submitted: false,\r\n      value: 0\r\n    };\r\n  }\r\n\r\n  resetState() {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { childRef } = this.props;\r\n    childRef(this);\r\n    this.getData();\r\n    this.setWhichItem(\"slider\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { childRef } = this.props;\r\n    childRef(undefined);\r\n  }\r\n\r\n  setWhichItem(str) {\r\n    this.props.setWhichItem(str);\r\n  }\r\n\r\n  getData() {\r\n    const db = this.props.expt.dbInfo.db;\r\n    // there will be problems if user's study name / experiment name inclues \"-\"\r\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\r\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\r\n    this.props.getExpt(db, studyName, exptName);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value })\r\n  }\r\n\r\n  showSlider() {\r\n    return (\r\n      <div className=\"container\">\r\n        {this.props.question} <br/>\r\n        <input \r\n          type=\"range\"\r\n          min={this.props.lowRange}\r\n          max={this.props.highRange}\r\n          name=\"value\"\r\n          value={this.state.value}\r\n          onChange={this.onChange}\r\n        />\r\n        {this.state.value} <br/>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  onSubmit() {\r\n    const question = this.props.question;\r\n    // put answer in our redux store to be sent via API later\r\n    this.props.storeAnswer(question, this.state.value);\r\n    this.setState({ submitted: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.showSlider()} <br/>\r\n        {\r\n          !this.state.submitted && \r\n          <div>\r\n            <input type=\"submit\" className=\"btn\" value=\"Ok\"\r\n              onClick={this.onSubmit}/> <br/>\r\n            <p style={{ color: \"grey\" }}>\r\n              Reminder: Once you click \"Ok\", your response to this question will be \r\n              recorded, and you won't be able to change your answer. \r\n            </p>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSlider.propTypes = {\r\n  getExpt: PropTypes.func.isRequired,\r\n  expt: PropTypes.object.isRequired,\r\n  storeAnswer: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  expt: state.expt\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getExpt, storeAnswer }\r\n)(Slider);","import React, { Component } from 'react';\r\nimport './NormalCurve.css';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  getExpt,\r\n  storeAnswer,\r\n  getItemData\r\n} from \"../actions/dataActions\";\r\n\r\n\r\n// safeguard everything below with if (!Object.keys(this.props.data).length == 0)\r\nclass NormalCurve extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.sliderRef = React.createRef();\r\n    this.rectRef = React.createRef();\r\n    this.svgRef = React.createRef();\r\n    this.areaRef = React.createRef();\r\n\r\n    this.dotReturn = this.dotReturn.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n    this.triMouseDown = this.triMouseDown.bind(this);\r\n    this.triDrag = this.triDrag.bind(this);\r\n    this.triUp = this.triUp.bind(this);\r\n    this.curveArea = this.curveArea.bind(this);\r\n\r\n    this.resetState = this.resetState.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.setWhichItem = this.setWhichItem.bind(this);\r\n    // onchange\r\n    // onsubmit\r\n\r\n    this.state = this.initialState;\r\n  }\r\n\r\n  get initialState() {\r\n    // console.log(this.props.expt);\r\n\r\n    const unitHeight = this.props.data[\"max-height\"];\r\n    const circRad = this.props.data[\"circle-radius\"];\r\n    const distancing = circRad * 4 - 1;\r\n    const height = (Math.ceil((distancing * unitHeight) / 50) + 1) * 50;\r\n    const ceilDist = height - 50;\r\n    const length = Math.ceil((distancing * this.props.data[\"len1\"] * 2 + distancing * this.props.data[\"len2\"] * 2) / 100) * 100;\r\n    const colNum = Math.round(length / distancing);\r\n    // console.log(height, distancing, ceilDist, colNum);\r\n    return {\r\n      submitted: false,      \r\n      x: 0, y: 0, isDown: false,\r\n      rectX: 12.5,\r\n      down: false,\r\n      svgWidth: length,\r\n      svgHeight: height,\r\n      svgX: 6,\r\n      len1: this.props.data[\"len1\"],\r\n      colValHeiS: this.props.data[\"colValHeiS\"],\r\n      len2: this.props.data[\"len2\"],\r\n      colValHeiS2: this.props.data[\"colValHeiS2\"],\r\n      distancing: distancing,\r\n      distancing1: (this.props.data[\"len2\"] + 1) * distancing,\r\n      distancing2: (this.props.data[\"len1\"] + this.props.data[\"len2\"] + 4) * distancing,\r\n      triCent1: Math.round((0.5 * this.props.data[\"len1\"]) * distancing) + distancing,\r\n      triCent2: Math.round((0.5 * this.props.data[\"len2\"]) * distancing) + distancing,\r\n      mousePointerRange: 0,\r\n      triDown: false,\r\n      col11: this.props.data[\"len2\"] + 1,\r\n      col12: this.props.data[\"len1\"] + this.props.data[\"len2\"] + 1,\r\n      col21: this.props.data[\"len1\"] + this.props.data[\"len2\"] + 3,\r\n      col22: this.props.data[\"len1\"] + 2 * this.props.data[\"len2\"] + 3,\r\n      colLim1: Math.round((length - (this.props.data[\"len1\"] * distancing)) / distancing),\r\n      colLim2: Math.round((length - (this.props.data[\"len2\"] * distancing)) / distancing),\r\n      overlapVals: this.props.data[\"overlapVals\"],\r\n      circRad: circRad,\r\n      ceilDist: ceilDist\r\n    }\r\n  }\r\n\r\n  resetState() {\r\n    this.setState(this.initialState);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { childRef } = this.props;\r\n    childRef(this);\r\n    this.getData();\r\n    this.setWhichItem(\"normal-curve\");\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { childRef } = this.props;\r\n    childRef(undefined);\r\n  }\r\n\r\n  setWhichItem(str) {\r\n    this.props.setWhichItem(str);\r\n  }\r\n\r\n  getData() {\r\n    const db = this.props.expt.dbInfo.db;\r\n    const studyName = this.props.expt.dbInfo.col.split(\"-\")[0];\r\n    const exptName = this.props.expt.dbInfo.col.split(\"-\")[1];\r\n    this.props.getExpt(db, studyName, exptName);\r\n  }\r\n\r\n  // add user x positions in here\r\n  onSubmit() {\r\n    const question = this.props.questionNC;\r\n    this.props.storeAnswer(\"Question\", question);\r\n    this.props.storeAnswer(\"graph1xpos\", this.state.col11);\r\n    this.props.storeAnswer(\"graph2xpos\", this.state.col21);\r\n    this.props.storeAnswer(\"area\", this.state.overlapVals[Math.abs(this.state.col22 - this.state.col11)])\r\n    this.setState({ submitted: true });\r\n  }\r\n\r\n  dotReturn(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    if (xPos > 7) {\r\n      xPos = 15 - xPos;\r\n    }\r\n\r\n    const CX = this.state.distancing1 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"DarkCyan\" fill=\"DarkCyan\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  dotReturn2(xPos, yPos) {\r\n    const xPosOrig = xPos;\r\n\r\n    if (xPos > 7) {\r\n      xPos = 15 - xPos;\r\n    }\r\n\r\n    const CX = this.state.distancing2 + this.state.distancing * xPosOrig + 10;\r\n    const CY = this.state.ceilDist - this.state.distancing * yPos + 10;\r\n\r\n    // const soft = <circle className=\"icon\" stroke=\"#555\" fill=\"#555\" fillOpacity=\"0.3\" strokeOpacity=\"0.4\" cx={CX} cy={CY} r=\"2\"></circle>;\r\n    var hard = <circle className=\"icon\" stroke=\"Crimson\" fill=\"Crimson\" fillOpacity=\"0.3\" strokeOpacity=\"0.3\" cx={CX} cy={CY} r={this.state.circRad}></circle>;\r\n\r\n    return hard;\r\n  }\r\n\r\n  triMouseDown(e, num) {\r\n    if (e.type === \"mousedown\") {\r\n      // console.log(\"MOUSEDOWN\");\r\n      e.preventDefault();\r\n      var svgPre = this.svgRef.current;\r\n      // Set mousePointerRange so that we know the distance\r\n      // from the mouse tip to the x-value of the triangle\r\n      // tip\r\n      var ptPre = svgPre.createSVGPoint();\r\n      ptPre.x = e.clientX;\r\n      var svgPPre = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n      if (num === 1) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent1 + this.state.distancing1 - svgPPre.x\r\n        }));\r\n      }\r\n      else if (num === 2) {\r\n        this.setState(prevState => ({\r\n          // rectX : svgP.x,\r\n          triDown: num,\r\n          mousePointerRange: prevState.triCent2 + this.state.distancing2 - svgPPre.x\r\n        }));\r\n      }\r\n      // console.log(this.state);\r\n    }\r\n  }\r\n\r\n  triDrag(e) {\r\n    // Set mousePointerRange so that we know the distance\r\n    // from the mouse tip to the x-value of the triangle\r\n    // tip\r\n    var svgPre = this.svgRef.current;\r\n    var ptPre = svgPre.createSVGPoint();\r\n    ptPre.x = e.clientX;\r\n    var svgPPree = ptPre.matrixTransform(svgPre.getScreenCTM().inverse());\r\n    this.setState({ x: e.screenX, y: e.screenY, svgX: svgPPree.x });\r\n    if (this.state.triDown === 2) {\r\n      // console.log(\"DRAG CONT'D\");\r\n      var svg = this.svgRef.current;\r\n      var pt = svg.createSVGPoint();\r\n      pt.x = e.clientX;\r\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n      e.preventDefault();\r\n      var x = svgP.x - this.state.triCent2 + this.state.mousePointerRange;\r\n      var col = Math.round((x - 6) / this.state.distancing);\r\n      if (col < 0) {\r\n        this.setState({ distancing2: 0, col21: 0, col22: this.state.len2 - 1 });\r\n      }\r\n      else if (col > this.state.colLim2) {\r\n        this.setState({ distancing2: this.state.distancing * this.state.colLim2, col21: this.state.colLim2, col22: this.state.colLim2 + this.state.len2 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing2: this.state.distancing * col, col21: col, col22: col + this.state.len2 - 1 });\r\n      }\r\n      this.curveArea(col);\r\n      // this.setState({ distancing2 : x })\r\n    }\r\n    else if (this.state.triDown === 1) {\r\n      // console.log(\"DRAG CONT'D\");\r\n      var svg = this.svgRef.current;\r\n      var pt = svg.createSVGPoint();\r\n      pt.x = e.clientX;\r\n      var svgP = pt.matrixTransform(svg.getScreenCTM().inverse());\r\n      e.preventDefault();\r\n      var x = svgP.x - this.state.triCent1 + this.state.mousePointerRange;\r\n      var col = Math.round((x - 6) / this.state.distancing);\r\n      if (col < 0) {\r\n        this.setState({ distancing1: 0, col11: 0, col12: this.state.len1 - 1 });\r\n      }\r\n      else if (col > this.state.colLim1) {\r\n        this.setState({ distancing1: this.state.distancing * this.state.colLim1, col11: this.state.colLim1, col2: this.state.colLim1 + this.state.len1 - 1 })\r\n      }\r\n      else {\r\n        this.setState({ distancing1: this.state.distancing * col, col11: col, col12: col + this.state.len1 - 1 });\r\n      }\r\n      this.curveArea(col);\r\n      // this.setState({ distancing2 : x })\r\n    }\r\n  }\r\n\r\n  triUp(e) {\r\n    // console.log(\"UP\");\r\n    if (this.state.triDown) {\r\n      this.setState({ triDown: false });\r\n    }\r\n  }\r\n\r\n  curveArea(col) {\r\n    if (this.state.col11 > this.state.col22 || this.state.col12 < this.state.col21) {\r\n      this.areaRef.current.innerHTML = 0;\r\n    }\r\n    else {\r\n      // console.log(this.state.col22, this.state.col11, Math.abs(this.state.col22 - this.state.col11));\r\n      this.areaRef.current.innerHTML = this.state.overlapVals[Math.abs(this.state.col22 - this.state.col11)];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <div onMouseMove={e => this.triDrag(e)} onMouseUp={e => this.triUp(e)}>\r\n        <div className=\"container\">\r\n          <h3>Question: {this.props.questionNC}</h3>\r\n        </div> \r\n        <svg width={this.state.svgWidth} height={this.state.svgHeight} ref={this.svgRef}>\r\n          <rect opacity=\"0.2\" width=\"100%\" height=\"100%\" fill=\"red\" />\r\n          {[...Array(this.state.len1).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS[col]).keys()].map(\r\n                (row) => this.dotReturn(col, row)\r\n              )\r\n          )}\r\n          {[...Array(this.state.len2).keys()].map(\r\n            (col) =>\r\n              [...Array(this.state.colValHeiS2[col]).keys()].map(\r\n                (row) => this.dotReturn2(col, row)\r\n              )\r\n          )}\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent1 + this.state.distancing1 - 5, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1 + 5, this.state.ceilDist + 35],\r\n                [this.state.triCent1 + this.state.distancing1, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 1)}\r\n          />\r\n          <polygon\r\n            points={\r\n              [\r\n                [this.state.triCent2 + this.state.distancing2 - 5, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2 + 5, this.state.ceilDist + 35],\r\n                [this.state.triCent2 + this.state.distancing2, this.state.ceilDist + 20]\r\n              ]\r\n            }\r\n            onMouseDown={(e, num) => this.triMouseDown(e, 2)}\r\n          />\r\n          Sorry, please use a different browser.\r\n        </svg>\r\n        <br />\r\n        <div class=\"boxed\">\r\n          <div class=\"color-box\" style={{ backgroundColor: \"DarkCyan\" }}></div>\r\n          {this.props.graph1}\r\n          <br />\r\n          <div class=\"color-box\" style={{ backgroundColor: \"Crimson\" }}></div>\r\n          {this.props.graph2}\r\n        </div>\r\n        <br />\r\n        <h4>Area Under Curve: <span ref={this.areaRef}></span> | First x-coordinate: {this.state.col11} | Second x-coordinate: {this.state.col21} </h4>\r\n        {\r\n          !this.state.submitted && \r\n          <div>\r\n            <input type=\"submit\" className=\"btn\" value=\"Ok\"\r\n              onClick={this.onSubmit}/> <br/>\r\n            <p style={{ color: \"grey\" }}>\r\n              Reminder: Once you click \"Ok\", your response to this question will be \r\n              recorded, and you won't be able to change your answer. \r\n            </p>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNormalCurve.propTypes = {\r\n  getExpt: PropTypes.func.isRequired,\r\n  expt: PropTypes.object.isRequired,\r\n  storeAnswer: PropTypes.func.isRequired,\r\n  getItemData: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  expt: state.expt\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getExpt, storeAnswer, getItemData }\r\n)(NormalCurve);","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { \r\n  getExpt,\r\n  sendExpt,\r\n  setNumQ,\r\n  isFinalQ,\r\n  storeAnswer,\r\n  getItemData\r\n} from \"../actions/dataActions\";\r\n\r\nimport Slider from \"../items/Slider\";\r\nimport NormalCurve from \"../items/NormalCurve.jsx\"\r\n\r\nclass Experiment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      whichItem: \"\"\r\n    }\r\n\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onFinalSubmit = this.onFinalSubmit.bind(this);\r\n    this.whichSubmit = this.whichSubmit.bind(this);\r\n    this.setWhichItem = this.setWhichItem.bind(this);\r\n  }\r\n\r\n  setWhichItem(str) {\r\n    this.setState({ whichItem: str })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData();\r\n\r\n    const username = this.props.match.params.username;\r\n    const expt = this.props.match.params.expt;\r\n    if (!this.props.expt.participantID) {\r\n      alert(\"Please enter your unique ID\");\r\n      this.props.history.push(\"/expt/\" + username + \"/\" + expt);\r\n    }\r\n\r\n    console.log(this.props.expt);\r\n  }\r\n\r\n  nextQuestion() {\r\n    const username = this.props.match.params.username;\r\n    const expt = this.props.match.params.expt;\r\n\r\n    // checking if the next question is the final question \r\n    // we have to regulate name of question (such as q0, q1, q2 ...)\r\n    // because we are not using mongoose schema\r\n    const currentQ = this.props.match.params.qKey.charAt(1);\r\n    // instead of +1, we need to do next in questionKeys arr.\r\n    const nextQ = this.props.expt.questionKeys[this.props.expt.numQ + 1];\r\n    const lastQ = this.props.expt.questionKeys[this.props.expt.questionKeys.length - 1];\r\n    if (nextQ == lastQ) {\r\n      this.props.isFinalQ(true);\r\n    }\r\n\r\n    // set num q to + 1 of current\r\n    this.props.setNumQ(this.props.expt.numQ + 1);\r\n    this.props.history.push(\"/expt/\" + username + \"/\" + expt + \r\n      \"/\" + nextQ.toString());\r\n  }\r\n\r\n  onSubmit() {\r\n    // switch (this.state.whichItem) {\r\n    //   case \"slider\":\r\n    //     this.childSlider.resetState();\r\n    //     this.nextQuestion();\r\n    //   case \"normal-curve\":\r\n    //     this.childNormalCurve.resetState();\r\n    //     this.nextQuestion();\r\n    //   default: \r\n    //     return (<div>Unknown Experiment Type</div>)\r\n    // }\r\n    if (this.childSlider) {\r\n      this.childSlider.resetState();\r\n      this.nextQuestion();\r\n    };\r\n    if (this.childNormalCurve) {\r\n      this.childNormalCurve.resetState();\r\n      this.nextQuestion();\r\n    }; \r\n  }\r\n\r\n  onFinalSubmit() {\r\n    this.props.history.push(\"/success\");\r\n  }\r\n\r\n  whichSubmit() {\r\n    return (\r\n      <div>\r\n        {\r\n          !this.props.expt.isFinalQ ? \r\n          <input type=\"submit\" className=\"btn\" value=\"Next Question\"\r\n            onClick={this.onSubmit}/> :\r\n          <div>\r\n            This is the final question. <p></p>\r\n            <input type=\"submit\" className=\"btn\" value=\"Submit\"\r\n              onClick={this.onFinalSubmit}/>\r\n          </div>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n  getData() {\r\n    const username = this.props.match.params.username;\r\n    // there will be problems if user's study name / experiment name inclues \"-\"\r\n    const studyName = this.props.match.params.expt.split(\"-\")[0];\r\n    const exptName = this.props.match.params.expt.split(\"-\")[1];\r\n    this.props.getExpt(username, studyName, exptName);\r\n  }\r\n\r\n  displayExpt() {\r\n    const username = this.props.match.params.username;\r\n    const expt = this.props.expt.exptToDisplay;\r\n    const key = this.props.match.params.qKey;\r\n    if (expt[key]) {\r\n      // ###TODO### add more if statements here for your experiment type\r\n      // follow the following format\r\n      switch(expt[key][\"Type\"]) {\r\n        case \"slider\":\r\n          const lowRange = expt[key][\"lowRange\"];\r\n          const highRange = expt[key][\"highRange\"];\r\n          const question = expt[key][\"Question\"];\r\n          return (\r\n            <div className=\"container\">\r\n              <Slider childRef={ref => (this.childSlider = ref)}\r\n                question={question} lowRange={lowRange} \r\n                highRange={highRange} setWhichItem={this.setWhichItem}/>\r\n              <br/>\r\n              {/* keep the following line */}\r\n              <this.whichSubmit />\r\n            </div>\r\n          )\r\n          break;\r\n        case \"normal-curve\":\r\n          const questionNC = expt[key][\"Question\"];\r\n          const graph1 = expt[key][\"Data1\"];\r\n          const graph2 = expt[key][\"Data2\"];\r\n          const dataFileName = expt[key][\"FileName\"];\r\n          const dataFileContent = expt[key][\"FileContent\"];\r\n          // this line should not be put here. it's overloading the API\r\n          // this.props.getItemData(username, dataFileName);\r\n          // if (!Object.keys(this.props.expt.fileContent).length == 0) {\r\n          //   console.log(this.props.expt.fileContent);\r\n          // }\r\n          return (\r\n            <div className=\"container\">\r\n              <NormalCurve childRef={ref => (this.childNormalCurve = ref)} \r\n                questionNC={questionNC} graph1={graph1} graph2={graph2} \r\n                fileName={dataFileName} data={dataFileContent} \r\n                setWhichItem={this.setWhichItem} />\r\n              <br/>\r\n              <this.whichSubmit />\r\n            </div>\r\n          )\r\n        default: \r\n          return (<div>Unknown Experiment Type</div>)\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const exptName = this.props.match.params.expt;\r\n    const participant = this.props.expt.participantID;\r\n    return (\r\n      <div className=\"container\">\r\n      Experiment name: <br/>\r\n      <b>{exptName}</b>\r\n      <br/>\r\n      Participant ID: <br/>\r\n      <b>{participant}</b>\r\n      <br/><br/>\r\n      {this.displayExpt()}\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nExperiment.propTypes = {\r\n  getExpt: PropTypes.func.isRequired,\r\n  expt: PropTypes.object.isRequired,\r\n  participantID: PropTypes.string.isRequired,\r\n  sendExpt: PropTypes.func.isRequired,\r\n  setNumQ: PropTypes.func.isRequired,\r\n  isFinalQ: PropTypes.func.isRequired,\r\n  storeAnswer: PropTypes.func.isRequired,\r\n  getItemData: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  expt: state.expt,\r\n  participantID: state.participantID\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getExpt, sendExpt, setNumQ, isFinalQ, storeAnswer, getItemData }\r\n)(Experiment);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {\r\n  sendExpt\r\n} from \"../actions/dataActions\"\r\n\r\nclass Success extends Component {\r\n  componentDidMount() {\r\n    console.log(this.props);\r\n    const username = this.props.expt.dbInfo.db;\r\n    const expt = this.props.expt.dbInfo.col;\r\n    if (!this.props.expt.answer.length == 0) {\r\n      const finalObj = {\r\n        participantID: this.props.expt.participantID\r\n      }\r\n      this.props.expt.answer.map(entry => {\r\n        finalObj[entry.que] = entry.ans\r\n      })\r\n      this.props.sendExpt(username, expt, finalObj);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1>Thank you for your submission!</h1> <br/>\r\n        Please go back to the Qualtrics survey and complete \r\n        the rest of the questions. \r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nSuccess.propTypes = {\r\n  sendExpt: PropTypes.func.isRequired,\r\n  expt: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  expt: state.expt,\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendExpt }\r\n)(Success);\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch, HashRouter } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nimport EnterID from \"./components/EnterID\";\nimport HomePage from \"./components/HomePage\";\nimport Experiment from \"./components/Experiment\";\nimport Success from \"./components/Success\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <HashRouter basename=\"/participant-app/\">\n        <div className=\"App\">\n          < Route exact path=\"/\" component={HomePage} />\n          < Route exact path=\"/success\" component={Success}/>\n          < Route exact path=\"/expt/:username/:expt\" component={EnterID} />\n          < Route exact path=\"/expt/:username/:expt/:qKey\" component={Experiment}/>\n        </div>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}